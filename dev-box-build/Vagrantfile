# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANTFILE_API_VERSION = "2"
VMBOX = "box-cutter/ubuntu1404-desktop"
VMBOX_URL = nil
BOOTSTRAP = "bootstrap.sh"
VM_NAME = "vagrant.dev"
RAM = "512"
CPUS = "1"
GUI = true

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  
  # Due to Windows compatibility issues with varant/puppet, run shell provisioner, which will run puppet apply from within the provisioned VM
  config.vm.provision :shell, :path => BOOTSTRAP
  
  config.vm.define :"base", primary: true do |base|
    base.vm.network :forwarded_port, guest: 80,  host: 8080, auto_correct: true
    base.vm.network :forwarded_port, guest: 443, host: 8443, auto_correct: true

    # By default Vagrant uses a host-only network on a private IP space that, at
    # Harvard, is reserved by the Law School. Instead, use a private IP space
    # that will never be routed (anything in the massive 172.16.0.0/12 range).
    base.vm.network :private_network, ip: '172.16.10.10'

    # Hostname can be anything you want that does not conflict with "real" DNS
    #
    # If you install the hostsupdater plugin, you can access the VM via its
    # DNS name. To install it run: `vagrant plugin install vagrant-hostsupdater`
    base.vm.hostname = VM_NAME
    base.vm.box = VMBOX
    if !VMBOX_URL.nil? && !VMBOX_URL.empty?
      base.vm.box_url = VMBOX_URL
    end

    base.vm.provider :virtualbox do |virtualbox, override|
      # Change default RAM allocation
      virtualbox.customize ['modifyvm', :id, '--memory', RAM, "--cpus", CPUS]
      virtualbox.gui = GUI
    end
  end
end
